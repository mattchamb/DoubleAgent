// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DoubleAgent.Protowin {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Agent {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_DoubleAgent_Protowin_RequestEnvironment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.RequestEnvironment, global::DoubleAgent.Protowin.RequestEnvironment.Builder> internal__static_DoubleAgent_Protowin_RequestEnvironment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DoubleAgent_Protowin_ResponseEnvironment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.ResponseEnvironment, global::DoubleAgent.Protowin.ResponseEnvironment.Builder> internal__static_DoubleAgent_Protowin_ResponseEnvironment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DoubleAgent_Protowin_Headers__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.Headers, global::DoubleAgent.Protowin.Headers.Builder> internal__static_DoubleAgent_Protowin_Headers__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DoubleAgent_Protowin_HeaderValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.HeaderValue, global::DoubleAgent.Protowin.HeaderValue.Builder> internal__static_DoubleAgent_Protowin_HeaderValue__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Agent() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CgthZ2VudC5wcm90bxIURG91YmxlQWdlbnQuUHJvdG93aW4ijwIKElJlcXVl" + 
          "c3RFbnZpcm9ubWVudBITCgtSZXF1ZXN0Qm9keRgBIAIoDBI1Cg5SZXF1ZXN0" + 
          "SGVhZGVycxgCIAIoCzIdLkRvdWJsZUFnZW50LlByb3Rvd2luLkhlYWRlcnMS" + 
          "FQoNUmVxdWVzdE1ldGhvZBgDIAIoCRITCgtSZXF1ZXN0UGF0aBgEIAIoCRIX" + 
          "Cg9SZXF1ZXN0UGF0aEJhc2UYBSACKAkSFwoPUmVxdWVzdFByb3RvY29sGAYg" + 
          "AigJEhoKElJlcXVlc3RRdWVyeVN0cmluZxgHIAIoCRIVCg1SZXF1ZXN0U2No" + 
          "ZW1lGAggAigJEhwKFENvcnJlbGF0aW9uUmVmZXJlbmNlGAkgAigJIvIBChNS" + 
          "ZXNwb25zZUVudmlyb25tZW50EhQKDFJlc3BvbnNlQm9keRgBIAIoDBI2Cg9S" + 
          "ZXNwb25zZUhlYWRlcnMYAiACKAsyHS5Eb3VibGVBZ2VudC5Qcm90b3dpbi5I" + 
          "ZWFkZXJzEhoKElJlc3BvbnNlU3RhdHVzQ29kZRgDIAIoBRIcChRSZXNwb25z" + 
          "ZVJlYXNvblBocmFzZRgEIAEoCRIYChBSZXNwb25zZVByb3RvY29sGAUgAigJ" + 
          "EjkKB1JlcXVlc3QYBiACKAsyKC5Eb3VibGVBZ2VudC5Qcm90b3dpbi5SZXF1" + 
          "ZXN0RW52aXJvbm1lbnQiOwoHSGVhZGVycxIwCgVWYWx1ZRgBIAMoCzIhLkRv" + 
          "dWJsZUFnZW50LlByb3Rvd2luLkhlYWRlclZhbHVlIioKC0hlYWRlclZhbHVl" + 
          "EgsKA0tleRgBIAIoCRIOCgZWYWx1ZXMYAiADKAk=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_DoubleAgent_Protowin_RequestEnvironment__Descriptor = Descriptor.MessageTypes[0];
        internal__static_DoubleAgent_Protowin_RequestEnvironment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.RequestEnvironment, global::DoubleAgent.Protowin.RequestEnvironment.Builder>(internal__static_DoubleAgent_Protowin_RequestEnvironment__Descriptor,
                new string[] { "RequestBody", "RequestHeaders", "RequestMethod", "RequestPath", "RequestPathBase", "RequestProtocol", "RequestQueryString", "RequestScheme", "CorrelationReference", });
        internal__static_DoubleAgent_Protowin_ResponseEnvironment__Descriptor = Descriptor.MessageTypes[1];
        internal__static_DoubleAgent_Protowin_ResponseEnvironment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.ResponseEnvironment, global::DoubleAgent.Protowin.ResponseEnvironment.Builder>(internal__static_DoubleAgent_Protowin_ResponseEnvironment__Descriptor,
                new string[] { "ResponseBody", "ResponseHeaders", "ResponseStatusCode", "ResponseReasonPhrase", "ResponseProtocol", "Request", });
        internal__static_DoubleAgent_Protowin_Headers__Descriptor = Descriptor.MessageTypes[2];
        internal__static_DoubleAgent_Protowin_Headers__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.Headers, global::DoubleAgent.Protowin.Headers.Builder>(internal__static_DoubleAgent_Protowin_Headers__Descriptor,
                new string[] { "Value", });
        internal__static_DoubleAgent_Protowin_HeaderValue__Descriptor = Descriptor.MessageTypes[3];
        internal__static_DoubleAgent_Protowin_HeaderValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DoubleAgent.Protowin.HeaderValue, global::DoubleAgent.Protowin.HeaderValue.Builder>(internal__static_DoubleAgent_Protowin_HeaderValue__Descriptor,
                new string[] { "Key", "Values", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RequestEnvironment : pb::GeneratedMessage<RequestEnvironment, RequestEnvironment.Builder> {
    private RequestEnvironment() { }
    private static readonly RequestEnvironment defaultInstance = new RequestEnvironment().MakeReadOnly();
    private static readonly string[] _requestEnvironmentFieldNames = new string[] { "CorrelationReference", "RequestBody", "RequestHeaders", "RequestMethod", "RequestPath", "RequestPathBase", "RequestProtocol", "RequestQueryString", "RequestScheme" };
    private static readonly uint[] _requestEnvironmentFieldTags = new uint[] { 74, 10, 18, 26, 34, 42, 50, 58, 66 };
    public static RequestEnvironment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RequestEnvironment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RequestEnvironment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_RequestEnvironment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RequestEnvironment, RequestEnvironment.Builder> InternalFieldAccessors {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_RequestEnvironment__FieldAccessorTable; }
    }
    
    public const int RequestBodyFieldNumber = 1;
    private bool hasRequestBody;
    private pb::ByteString requestBody_ = pb::ByteString.Empty;
    public bool HasRequestBody {
      get { return hasRequestBody; }
    }
    public pb::ByteString RequestBody {
      get { return requestBody_; }
    }
    
    public const int RequestHeadersFieldNumber = 2;
    private bool hasRequestHeaders;
    private global::DoubleAgent.Protowin.Headers requestHeaders_;
    public bool HasRequestHeaders {
      get { return hasRequestHeaders; }
    }
    public global::DoubleAgent.Protowin.Headers RequestHeaders {
      get { return requestHeaders_ ?? global::DoubleAgent.Protowin.Headers.DefaultInstance; }
    }
    
    public const int RequestMethodFieldNumber = 3;
    private bool hasRequestMethod;
    private string requestMethod_ = "";
    public bool HasRequestMethod {
      get { return hasRequestMethod; }
    }
    public string RequestMethod {
      get { return requestMethod_; }
    }
    
    public const int RequestPathFieldNumber = 4;
    private bool hasRequestPath;
    private string requestPath_ = "";
    public bool HasRequestPath {
      get { return hasRequestPath; }
    }
    public string RequestPath {
      get { return requestPath_; }
    }
    
    public const int RequestPathBaseFieldNumber = 5;
    private bool hasRequestPathBase;
    private string requestPathBase_ = "";
    public bool HasRequestPathBase {
      get { return hasRequestPathBase; }
    }
    public string RequestPathBase {
      get { return requestPathBase_; }
    }
    
    public const int RequestProtocolFieldNumber = 6;
    private bool hasRequestProtocol;
    private string requestProtocol_ = "";
    public bool HasRequestProtocol {
      get { return hasRequestProtocol; }
    }
    public string RequestProtocol {
      get { return requestProtocol_; }
    }
    
    public const int RequestQueryStringFieldNumber = 7;
    private bool hasRequestQueryString;
    private string requestQueryString_ = "";
    public bool HasRequestQueryString {
      get { return hasRequestQueryString; }
    }
    public string RequestQueryString {
      get { return requestQueryString_; }
    }
    
    public const int RequestSchemeFieldNumber = 8;
    private bool hasRequestScheme;
    private string requestScheme_ = "";
    public bool HasRequestScheme {
      get { return hasRequestScheme; }
    }
    public string RequestScheme {
      get { return requestScheme_; }
    }
    
    public const int CorrelationReferenceFieldNumber = 9;
    private bool hasCorrelationReference;
    private string correlationReference_ = "";
    public bool HasCorrelationReference {
      get { return hasCorrelationReference; }
    }
    public string CorrelationReference {
      get { return correlationReference_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestBody) return false;
        if (!hasRequestHeaders) return false;
        if (!hasRequestMethod) return false;
        if (!hasRequestPath) return false;
        if (!hasRequestPathBase) return false;
        if (!hasRequestProtocol) return false;
        if (!hasRequestQueryString) return false;
        if (!hasRequestScheme) return false;
        if (!hasCorrelationReference) return false;
        if (!RequestHeaders.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _requestEnvironmentFieldNames;
      if (hasRequestBody) {
        output.WriteBytes(1, field_names[1], RequestBody);
      }
      if (hasRequestHeaders) {
        output.WriteMessage(2, field_names[2], RequestHeaders);
      }
      if (hasRequestMethod) {
        output.WriteString(3, field_names[3], RequestMethod);
      }
      if (hasRequestPath) {
        output.WriteString(4, field_names[4], RequestPath);
      }
      if (hasRequestPathBase) {
        output.WriteString(5, field_names[5], RequestPathBase);
      }
      if (hasRequestProtocol) {
        output.WriteString(6, field_names[6], RequestProtocol);
      }
      if (hasRequestQueryString) {
        output.WriteString(7, field_names[7], RequestQueryString);
      }
      if (hasRequestScheme) {
        output.WriteString(8, field_names[8], RequestScheme);
      }
      if (hasCorrelationReference) {
        output.WriteString(9, field_names[0], CorrelationReference);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRequestBody) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, RequestBody);
        }
        if (hasRequestHeaders) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, RequestHeaders);
        }
        if (hasRequestMethod) {
          size += pb::CodedOutputStream.ComputeStringSize(3, RequestMethod);
        }
        if (hasRequestPath) {
          size += pb::CodedOutputStream.ComputeStringSize(4, RequestPath);
        }
        if (hasRequestPathBase) {
          size += pb::CodedOutputStream.ComputeStringSize(5, RequestPathBase);
        }
        if (hasRequestProtocol) {
          size += pb::CodedOutputStream.ComputeStringSize(6, RequestProtocol);
        }
        if (hasRequestQueryString) {
          size += pb::CodedOutputStream.ComputeStringSize(7, RequestQueryString);
        }
        if (hasRequestScheme) {
          size += pb::CodedOutputStream.ComputeStringSize(8, RequestScheme);
        }
        if (hasCorrelationReference) {
          size += pb::CodedOutputStream.ComputeStringSize(9, CorrelationReference);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RequestEnvironment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestEnvironment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestEnvironment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestEnvironment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestEnvironment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestEnvironment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RequestEnvironment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RequestEnvironment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RequestEnvironment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestEnvironment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RequestEnvironment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RequestEnvironment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RequestEnvironment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RequestEnvironment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RequestEnvironment result;
      
      private RequestEnvironment PrepareBuilder() {
        if (resultIsReadOnly) {
          RequestEnvironment original = result;
          result = new RequestEnvironment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RequestEnvironment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DoubleAgent.Protowin.RequestEnvironment.Descriptor; }
      }
      
      public override RequestEnvironment DefaultInstanceForType {
        get { return global::DoubleAgent.Protowin.RequestEnvironment.DefaultInstance; }
      }
      
      public override RequestEnvironment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RequestEnvironment) {
          return MergeFrom((RequestEnvironment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RequestEnvironment other) {
        if (other == global::DoubleAgent.Protowin.RequestEnvironment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestBody) {
          RequestBody = other.RequestBody;
        }
        if (other.HasRequestHeaders) {
          MergeRequestHeaders(other.RequestHeaders);
        }
        if (other.HasRequestMethod) {
          RequestMethod = other.RequestMethod;
        }
        if (other.HasRequestPath) {
          RequestPath = other.RequestPath;
        }
        if (other.HasRequestPathBase) {
          RequestPathBase = other.RequestPathBase;
        }
        if (other.HasRequestProtocol) {
          RequestProtocol = other.RequestProtocol;
        }
        if (other.HasRequestQueryString) {
          RequestQueryString = other.RequestQueryString;
        }
        if (other.HasRequestScheme) {
          RequestScheme = other.RequestScheme;
        }
        if (other.HasCorrelationReference) {
          CorrelationReference = other.CorrelationReference;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_requestEnvironmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _requestEnvironmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRequestBody = input.ReadBytes(ref result.requestBody_);
              break;
            }
            case 18: {
              global::DoubleAgent.Protowin.Headers.Builder subBuilder = global::DoubleAgent.Protowin.Headers.CreateBuilder();
              if (result.hasRequestHeaders) {
                subBuilder.MergeFrom(RequestHeaders);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeaders = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasRequestMethod = input.ReadString(ref result.requestMethod_);
              break;
            }
            case 34: {
              result.hasRequestPath = input.ReadString(ref result.requestPath_);
              break;
            }
            case 42: {
              result.hasRequestPathBase = input.ReadString(ref result.requestPathBase_);
              break;
            }
            case 50: {
              result.hasRequestProtocol = input.ReadString(ref result.requestProtocol_);
              break;
            }
            case 58: {
              result.hasRequestQueryString = input.ReadString(ref result.requestQueryString_);
              break;
            }
            case 66: {
              result.hasRequestScheme = input.ReadString(ref result.requestScheme_);
              break;
            }
            case 74: {
              result.hasCorrelationReference = input.ReadString(ref result.correlationReference_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestBody {
        get { return result.hasRequestBody; }
      }
      public pb::ByteString RequestBody {
        get { return result.RequestBody; }
        set { SetRequestBody(value); }
      }
      public Builder SetRequestBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestBody = true;
        result.requestBody_ = value;
        return this;
      }
      public Builder ClearRequestBody() {
        PrepareBuilder();
        result.hasRequestBody = false;
        result.requestBody_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasRequestHeaders {
       get { return result.hasRequestHeaders; }
      }
      public global::DoubleAgent.Protowin.Headers RequestHeaders {
        get { return result.RequestHeaders; }
        set { SetRequestHeaders(value); }
      }
      public Builder SetRequestHeaders(global::DoubleAgent.Protowin.Headers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeaders = true;
        result.requestHeaders_ = value;
        return this;
      }
      public Builder SetRequestHeaders(global::DoubleAgent.Protowin.Headers.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeaders = true;
        result.requestHeaders_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeaders(global::DoubleAgent.Protowin.Headers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeaders &&
            result.requestHeaders_ != global::DoubleAgent.Protowin.Headers.DefaultInstance) {
            result.requestHeaders_ = global::DoubleAgent.Protowin.Headers.CreateBuilder(result.requestHeaders_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeaders_ = value;
        }
        result.hasRequestHeaders = true;
        return this;
      }
      public Builder ClearRequestHeaders() {
        PrepareBuilder();
        result.hasRequestHeaders = false;
        result.requestHeaders_ = null;
        return this;
      }
      
      public bool HasRequestMethod {
        get { return result.hasRequestMethod; }
      }
      public string RequestMethod {
        get { return result.RequestMethod; }
        set { SetRequestMethod(value); }
      }
      public Builder SetRequestMethod(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestMethod = true;
        result.requestMethod_ = value;
        return this;
      }
      public Builder ClearRequestMethod() {
        PrepareBuilder();
        result.hasRequestMethod = false;
        result.requestMethod_ = "";
        return this;
      }
      
      public bool HasRequestPath {
        get { return result.hasRequestPath; }
      }
      public string RequestPath {
        get { return result.RequestPath; }
        set { SetRequestPath(value); }
      }
      public Builder SetRequestPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestPath = true;
        result.requestPath_ = value;
        return this;
      }
      public Builder ClearRequestPath() {
        PrepareBuilder();
        result.hasRequestPath = false;
        result.requestPath_ = "";
        return this;
      }
      
      public bool HasRequestPathBase {
        get { return result.hasRequestPathBase; }
      }
      public string RequestPathBase {
        get { return result.RequestPathBase; }
        set { SetRequestPathBase(value); }
      }
      public Builder SetRequestPathBase(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestPathBase = true;
        result.requestPathBase_ = value;
        return this;
      }
      public Builder ClearRequestPathBase() {
        PrepareBuilder();
        result.hasRequestPathBase = false;
        result.requestPathBase_ = "";
        return this;
      }
      
      public bool HasRequestProtocol {
        get { return result.hasRequestProtocol; }
      }
      public string RequestProtocol {
        get { return result.RequestProtocol; }
        set { SetRequestProtocol(value); }
      }
      public Builder SetRequestProtocol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestProtocol = true;
        result.requestProtocol_ = value;
        return this;
      }
      public Builder ClearRequestProtocol() {
        PrepareBuilder();
        result.hasRequestProtocol = false;
        result.requestProtocol_ = "";
        return this;
      }
      
      public bool HasRequestQueryString {
        get { return result.hasRequestQueryString; }
      }
      public string RequestQueryString {
        get { return result.RequestQueryString; }
        set { SetRequestQueryString(value); }
      }
      public Builder SetRequestQueryString(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestQueryString = true;
        result.requestQueryString_ = value;
        return this;
      }
      public Builder ClearRequestQueryString() {
        PrepareBuilder();
        result.hasRequestQueryString = false;
        result.requestQueryString_ = "";
        return this;
      }
      
      public bool HasRequestScheme {
        get { return result.hasRequestScheme; }
      }
      public string RequestScheme {
        get { return result.RequestScheme; }
        set { SetRequestScheme(value); }
      }
      public Builder SetRequestScheme(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestScheme = true;
        result.requestScheme_ = value;
        return this;
      }
      public Builder ClearRequestScheme() {
        PrepareBuilder();
        result.hasRequestScheme = false;
        result.requestScheme_ = "";
        return this;
      }
      
      public bool HasCorrelationReference {
        get { return result.hasCorrelationReference; }
      }
      public string CorrelationReference {
        get { return result.CorrelationReference; }
        set { SetCorrelationReference(value); }
      }
      public Builder SetCorrelationReference(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCorrelationReference = true;
        result.correlationReference_ = value;
        return this;
      }
      public Builder ClearCorrelationReference() {
        PrepareBuilder();
        result.hasCorrelationReference = false;
        result.correlationReference_ = "";
        return this;
      }
    }
    static RequestEnvironment() {
      object.ReferenceEquals(global::DoubleAgent.Protowin.Agent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ResponseEnvironment : pb::GeneratedMessage<ResponseEnvironment, ResponseEnvironment.Builder> {
    private ResponseEnvironment() { }
    private static readonly ResponseEnvironment defaultInstance = new ResponseEnvironment().MakeReadOnly();
    private static readonly string[] _responseEnvironmentFieldNames = new string[] { "Request", "ResponseBody", "ResponseHeaders", "ResponseProtocol", "ResponseReasonPhrase", "ResponseStatusCode" };
    private static readonly uint[] _responseEnvironmentFieldTags = new uint[] { 50, 10, 18, 42, 34, 24 };
    public static ResponseEnvironment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ResponseEnvironment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ResponseEnvironment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_ResponseEnvironment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ResponseEnvironment, ResponseEnvironment.Builder> InternalFieldAccessors {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_ResponseEnvironment__FieldAccessorTable; }
    }
    
    public const int ResponseBodyFieldNumber = 1;
    private bool hasResponseBody;
    private pb::ByteString responseBody_ = pb::ByteString.Empty;
    public bool HasResponseBody {
      get { return hasResponseBody; }
    }
    public pb::ByteString ResponseBody {
      get { return responseBody_; }
    }
    
    public const int ResponseHeadersFieldNumber = 2;
    private bool hasResponseHeaders;
    private global::DoubleAgent.Protowin.Headers responseHeaders_;
    public bool HasResponseHeaders {
      get { return hasResponseHeaders; }
    }
    public global::DoubleAgent.Protowin.Headers ResponseHeaders {
      get { return responseHeaders_ ?? global::DoubleAgent.Protowin.Headers.DefaultInstance; }
    }
    
    public const int ResponseStatusCodeFieldNumber = 3;
    private bool hasResponseStatusCode;
    private int responseStatusCode_;
    public bool HasResponseStatusCode {
      get { return hasResponseStatusCode; }
    }
    public int ResponseStatusCode {
      get { return responseStatusCode_; }
    }
    
    public const int ResponseReasonPhraseFieldNumber = 4;
    private bool hasResponseReasonPhrase;
    private string responseReasonPhrase_ = "";
    public bool HasResponseReasonPhrase {
      get { return hasResponseReasonPhrase; }
    }
    public string ResponseReasonPhrase {
      get { return responseReasonPhrase_; }
    }
    
    public const int ResponseProtocolFieldNumber = 5;
    private bool hasResponseProtocol;
    private string responseProtocol_ = "";
    public bool HasResponseProtocol {
      get { return hasResponseProtocol; }
    }
    public string ResponseProtocol {
      get { return responseProtocol_; }
    }
    
    public const int RequestFieldNumber = 6;
    private bool hasRequest;
    private global::DoubleAgent.Protowin.RequestEnvironment request_;
    public bool HasRequest {
      get { return hasRequest; }
    }
    public global::DoubleAgent.Protowin.RequestEnvironment Request {
      get { return request_ ?? global::DoubleAgent.Protowin.RequestEnvironment.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasResponseBody) return false;
        if (!hasResponseHeaders) return false;
        if (!hasResponseStatusCode) return false;
        if (!hasResponseProtocol) return false;
        if (!hasRequest) return false;
        if (!ResponseHeaders.IsInitialized) return false;
        if (!Request.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _responseEnvironmentFieldNames;
      if (hasResponseBody) {
        output.WriteBytes(1, field_names[1], ResponseBody);
      }
      if (hasResponseHeaders) {
        output.WriteMessage(2, field_names[2], ResponseHeaders);
      }
      if (hasResponseStatusCode) {
        output.WriteInt32(3, field_names[5], ResponseStatusCode);
      }
      if (hasResponseReasonPhrase) {
        output.WriteString(4, field_names[4], ResponseReasonPhrase);
      }
      if (hasResponseProtocol) {
        output.WriteString(5, field_names[3], ResponseProtocol);
      }
      if (hasRequest) {
        output.WriteMessage(6, field_names[0], Request);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasResponseBody) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, ResponseBody);
        }
        if (hasResponseHeaders) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ResponseHeaders);
        }
        if (hasResponseStatusCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ResponseStatusCode);
        }
        if (hasResponseReasonPhrase) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ResponseReasonPhrase);
        }
        if (hasResponseProtocol) {
          size += pb::CodedOutputStream.ComputeStringSize(5, ResponseProtocol);
        }
        if (hasRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Request);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ResponseEnvironment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResponseEnvironment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResponseEnvironment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResponseEnvironment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResponseEnvironment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResponseEnvironment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ResponseEnvironment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ResponseEnvironment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ResponseEnvironment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResponseEnvironment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ResponseEnvironment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ResponseEnvironment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ResponseEnvironment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ResponseEnvironment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ResponseEnvironment result;
      
      private ResponseEnvironment PrepareBuilder() {
        if (resultIsReadOnly) {
          ResponseEnvironment original = result;
          result = new ResponseEnvironment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ResponseEnvironment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DoubleAgent.Protowin.ResponseEnvironment.Descriptor; }
      }
      
      public override ResponseEnvironment DefaultInstanceForType {
        get { return global::DoubleAgent.Protowin.ResponseEnvironment.DefaultInstance; }
      }
      
      public override ResponseEnvironment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ResponseEnvironment) {
          return MergeFrom((ResponseEnvironment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ResponseEnvironment other) {
        if (other == global::DoubleAgent.Protowin.ResponseEnvironment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseBody) {
          ResponseBody = other.ResponseBody;
        }
        if (other.HasResponseHeaders) {
          MergeResponseHeaders(other.ResponseHeaders);
        }
        if (other.HasResponseStatusCode) {
          ResponseStatusCode = other.ResponseStatusCode;
        }
        if (other.HasResponseReasonPhrase) {
          ResponseReasonPhrase = other.ResponseReasonPhrase;
        }
        if (other.HasResponseProtocol) {
          ResponseProtocol = other.ResponseProtocol;
        }
        if (other.HasRequest) {
          MergeRequest(other.Request);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_responseEnvironmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _responseEnvironmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasResponseBody = input.ReadBytes(ref result.responseBody_);
              break;
            }
            case 18: {
              global::DoubleAgent.Protowin.Headers.Builder subBuilder = global::DoubleAgent.Protowin.Headers.CreateBuilder();
              if (result.hasResponseHeaders) {
                subBuilder.MergeFrom(ResponseHeaders);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeaders = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasResponseStatusCode = input.ReadInt32(ref result.responseStatusCode_);
              break;
            }
            case 34: {
              result.hasResponseReasonPhrase = input.ReadString(ref result.responseReasonPhrase_);
              break;
            }
            case 42: {
              result.hasResponseProtocol = input.ReadString(ref result.responseProtocol_);
              break;
            }
            case 50: {
              global::DoubleAgent.Protowin.RequestEnvironment.Builder subBuilder = global::DoubleAgent.Protowin.RequestEnvironment.CreateBuilder();
              if (result.hasRequest) {
                subBuilder.MergeFrom(Request);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Request = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseBody {
        get { return result.hasResponseBody; }
      }
      public pb::ByteString ResponseBody {
        get { return result.ResponseBody; }
        set { SetResponseBody(value); }
      }
      public Builder SetResponseBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseBody = true;
        result.responseBody_ = value;
        return this;
      }
      public Builder ClearResponseBody() {
        PrepareBuilder();
        result.hasResponseBody = false;
        result.responseBody_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasResponseHeaders {
       get { return result.hasResponseHeaders; }
      }
      public global::DoubleAgent.Protowin.Headers ResponseHeaders {
        get { return result.ResponseHeaders; }
        set { SetResponseHeaders(value); }
      }
      public Builder SetResponseHeaders(global::DoubleAgent.Protowin.Headers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeaders = true;
        result.responseHeaders_ = value;
        return this;
      }
      public Builder SetResponseHeaders(global::DoubleAgent.Protowin.Headers.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeaders = true;
        result.responseHeaders_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeaders(global::DoubleAgent.Protowin.Headers value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeaders &&
            result.responseHeaders_ != global::DoubleAgent.Protowin.Headers.DefaultInstance) {
            result.responseHeaders_ = global::DoubleAgent.Protowin.Headers.CreateBuilder(result.responseHeaders_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeaders_ = value;
        }
        result.hasResponseHeaders = true;
        return this;
      }
      public Builder ClearResponseHeaders() {
        PrepareBuilder();
        result.hasResponseHeaders = false;
        result.responseHeaders_ = null;
        return this;
      }
      
      public bool HasResponseStatusCode {
        get { return result.hasResponseStatusCode; }
      }
      public int ResponseStatusCode {
        get { return result.ResponseStatusCode; }
        set { SetResponseStatusCode(value); }
      }
      public Builder SetResponseStatusCode(int value) {
        PrepareBuilder();
        result.hasResponseStatusCode = true;
        result.responseStatusCode_ = value;
        return this;
      }
      public Builder ClearResponseStatusCode() {
        PrepareBuilder();
        result.hasResponseStatusCode = false;
        result.responseStatusCode_ = 0;
        return this;
      }
      
      public bool HasResponseReasonPhrase {
        get { return result.hasResponseReasonPhrase; }
      }
      public string ResponseReasonPhrase {
        get { return result.ResponseReasonPhrase; }
        set { SetResponseReasonPhrase(value); }
      }
      public Builder SetResponseReasonPhrase(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseReasonPhrase = true;
        result.responseReasonPhrase_ = value;
        return this;
      }
      public Builder ClearResponseReasonPhrase() {
        PrepareBuilder();
        result.hasResponseReasonPhrase = false;
        result.responseReasonPhrase_ = "";
        return this;
      }
      
      public bool HasResponseProtocol {
        get { return result.hasResponseProtocol; }
      }
      public string ResponseProtocol {
        get { return result.ResponseProtocol; }
        set { SetResponseProtocol(value); }
      }
      public Builder SetResponseProtocol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseProtocol = true;
        result.responseProtocol_ = value;
        return this;
      }
      public Builder ClearResponseProtocol() {
        PrepareBuilder();
        result.hasResponseProtocol = false;
        result.responseProtocol_ = "";
        return this;
      }
      
      public bool HasRequest {
       get { return result.hasRequest; }
      }
      public global::DoubleAgent.Protowin.RequestEnvironment Request {
        get { return result.Request; }
        set { SetRequest(value); }
      }
      public Builder SetRequest(global::DoubleAgent.Protowin.RequestEnvironment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder SetRequest(global::DoubleAgent.Protowin.RequestEnvironment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequest = true;
        result.request_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequest(global::DoubleAgent.Protowin.RequestEnvironment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequest &&
            result.request_ != global::DoubleAgent.Protowin.RequestEnvironment.DefaultInstance) {
            result.request_ = global::DoubleAgent.Protowin.RequestEnvironment.CreateBuilder(result.request_).MergeFrom(value).BuildPartial();
        } else {
          result.request_ = value;
        }
        result.hasRequest = true;
        return this;
      }
      public Builder ClearRequest() {
        PrepareBuilder();
        result.hasRequest = false;
        result.request_ = null;
        return this;
      }
    }
    static ResponseEnvironment() {
      object.ReferenceEquals(global::DoubleAgent.Protowin.Agent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Headers : pb::GeneratedMessage<Headers, Headers.Builder> {
    private Headers() { }
    private static readonly Headers defaultInstance = new Headers().MakeReadOnly();
    private static readonly string[] _headersFieldNames = new string[] { "Value" };
    private static readonly uint[] _headersFieldTags = new uint[] { 10 };
    public static Headers DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Headers DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Headers ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_Headers__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Headers, Headers.Builder> InternalFieldAccessors {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_Headers__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private pbc::PopsicleList<global::DoubleAgent.Protowin.HeaderValue> value_ = new pbc::PopsicleList<global::DoubleAgent.Protowin.HeaderValue>();
    public scg::IList<global::DoubleAgent.Protowin.HeaderValue> ValueList {
      get { return value_; }
    }
    public int ValueCount {
      get { return value_.Count; }
    }
    public global::DoubleAgent.Protowin.HeaderValue GetValue(int index) {
      return value_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::DoubleAgent.Protowin.HeaderValue element in ValueList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _headersFieldNames;
      if (value_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], value_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DoubleAgent.Protowin.HeaderValue element in ValueList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Headers ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Headers ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Headers ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Headers ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Headers ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Headers ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Headers ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Headers ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Headers ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Headers ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Headers MakeReadOnly() {
      value_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Headers prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Headers, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Headers cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Headers result;
      
      private Headers PrepareBuilder() {
        if (resultIsReadOnly) {
          Headers original = result;
          result = new Headers();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Headers MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DoubleAgent.Protowin.Headers.Descriptor; }
      }
      
      public override Headers DefaultInstanceForType {
        get { return global::DoubleAgent.Protowin.Headers.DefaultInstance; }
      }
      
      public override Headers BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Headers) {
          return MergeFrom((Headers) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Headers other) {
        if (other == global::DoubleAgent.Protowin.Headers.DefaultInstance) return this;
        PrepareBuilder();
        if (other.value_.Count != 0) {
          result.value_.Add(other.value_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_headersFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _headersFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.value_, global::DoubleAgent.Protowin.HeaderValue.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::DoubleAgent.Protowin.HeaderValue> ValueList {
        get { return PrepareBuilder().value_; }
      }
      public int ValueCount {
        get { return result.ValueCount; }
      }
      public global::DoubleAgent.Protowin.HeaderValue GetValue(int index) {
        return result.GetValue(index);
      }
      public Builder SetValue(int index, global::DoubleAgent.Protowin.HeaderValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.value_[index] = value;
        return this;
      }
      public Builder SetValue(int index, global::DoubleAgent.Protowin.HeaderValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.value_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddValue(global::DoubleAgent.Protowin.HeaderValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.value_.Add(value);
        return this;
      }
      public Builder AddValue(global::DoubleAgent.Protowin.HeaderValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.value_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeValue(scg::IEnumerable<global::DoubleAgent.Protowin.HeaderValue> values) {
        PrepareBuilder();
        result.value_.Add(values);
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.value_.Clear();
        return this;
      }
    }
    static Headers() {
      object.ReferenceEquals(global::DoubleAgent.Protowin.Agent.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HeaderValue : pb::GeneratedMessage<HeaderValue, HeaderValue.Builder> {
    private HeaderValue() { }
    private static readonly HeaderValue defaultInstance = new HeaderValue().MakeReadOnly();
    private static readonly string[] _headerValueFieldNames = new string[] { "Key", "Values" };
    private static readonly uint[] _headerValueFieldTags = new uint[] { 10, 18 };
    public static HeaderValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HeaderValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HeaderValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_HeaderValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HeaderValue, HeaderValue.Builder> InternalFieldAccessors {
      get { return global::DoubleAgent.Protowin.Agent.internal__static_DoubleAgent_Protowin_HeaderValue__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private string key_ = "";
    public bool HasKey {
      get { return hasKey; }
    }
    public string Key {
      get { return key_; }
    }
    
    public const int ValuesFieldNumber = 2;
    private pbc::PopsicleList<string> values_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ValuesList {
      get { return pbc::Lists.AsReadOnly(values_); }
    }
    public int ValuesCount {
      get { return values_.Count; }
    }
    public string GetValues(int index) {
      return values_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _headerValueFieldNames;
      if (hasKey) {
        output.WriteString(1, field_names[0], Key);
      }
      if (values_.Count > 0) {
        output.WriteStringArray(2, field_names[1], values_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Key);
        }
        {
          int dataSize = 0;
          foreach (string element in ValuesList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * values_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static HeaderValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeaderValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeaderValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeaderValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeaderValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeaderValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HeaderValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HeaderValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HeaderValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeaderValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HeaderValue MakeReadOnly() {
      values_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HeaderValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HeaderValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HeaderValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HeaderValue result;
      
      private HeaderValue PrepareBuilder() {
        if (resultIsReadOnly) {
          HeaderValue original = result;
          result = new HeaderValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HeaderValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DoubleAgent.Protowin.HeaderValue.Descriptor; }
      }
      
      public override HeaderValue DefaultInstanceForType {
        get { return global::DoubleAgent.Protowin.HeaderValue.DefaultInstance; }
      }
      
      public override HeaderValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HeaderValue) {
          return MergeFrom((HeaderValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HeaderValue other) {
        if (other == global::DoubleAgent.Protowin.HeaderValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.values_.Count != 0) {
          result.values_.Add(other.values_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_headerValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _headerValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadString(ref result.key_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.values_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public string Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> ValuesList {
        get { return PrepareBuilder().values_; }
      }
      public int ValuesCount {
        get { return result.ValuesCount; }
      }
      public string GetValues(int index) {
        return result.GetValues(index);
      }
      public Builder SetValues(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.values_[index] = value;
        return this;
      }
      public Builder AddValues(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.values_.Add(value);
        return this;
      }
      public Builder AddRangeValues(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.values_.Add(values);
        return this;
      }
      public Builder ClearValues() {
        PrepareBuilder();
        result.values_.Clear();
        return this;
      }
    }
    static HeaderValue() {
      object.ReferenceEquals(global::DoubleAgent.Protowin.Agent.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
